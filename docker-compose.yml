# docker-compose.yml
version: "3.8"

services:
  taiga-db:
    image: postgres:13
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: taiga
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - taiga_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "taiga"]
      interval: 10s
      timeout: 5s
      retries: 5

  taiga-backend:
    image: taigaio/taiga-back:latest
    depends_on:
      - taiga-db
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: taiga
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: taiga-db
      TAIGA_SECRET_KEY: ${TAIGA_SECRET_KEY}
      TAIGA_SITES_SCHEME: ${TAIGA_SCHEME:-https}
      TAIGA_SITES_DOMAIN: ${TAIGA_DOMAIN}
      EMAIL_HOST: ${EMAIL_HOST:-}
      EMAIL_PORT: ${EMAIL_PORT:-25}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:-}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:-}
      EMAIL_DEFAULT_FROM: ${EMAIL_DEFAULT_FROM:-no-reply@example.com}
    volumes:
      - taiga_media_data:/taiga-back/media
      - taiga_static_data:/taiga-back/static

  taiga-frontend:
    image: taigaio/taiga-front:latest
    depends_on:
      - taiga-backend
    environment:
      TAIGA_API_URL: "${TAIGA_SCHEME:-https}://${TAIGA_DOMAIN}/api/v1/"
      TAIGA_WEBSOCKETS_URL: "wss://${TAIGA_DOMAIN}/events"

  taiga-events:
    image: taigaio/taiga-events:latest
    depends_on:
      - taiga-backend
    environment:
      TAIGA_SECRET_KEY: ${TAIGA_SECRET_KEY}

  taiga-protected:
    image: taigaio/taiga-protected:latest
    depends_on:
      - taiga-backend
    environment:
      TAIGA_SECRET_KEY: ${TAIGA_SECRET_KEY}

  taiga-gateway:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    depends_on:
      - taiga-frontend
      - taiga-backend
      - taiga-events
      - taiga-protected
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - taiga_media_data:/taiga/media:ro
      - taiga_static_data:/taiga/static:ro

volumes:
  taiga_db_data:
  taiga_media_data:
  taiga_static_data:
