server {
    listen 80 default_server;
    server_name _;

    large_client_header_buffers 4 32k;
    client_max_body_size 50M;
    charset utf-8;

    # Frontend
    location / {
        proxy_pass http://taiga-frontend:80/;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
    }

    # Backend API
    location /api/ {
        proxy_pass http://taiga-backend:8000/api/;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
    }

    # Admin interface
    location /admin/ {
        proxy_pass http://taiga-backend:8000/admin/;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
    }

    # Static files
    location /static/ {
        alias /taiga/static/;
        expires max;
        add_header Cache-Control "public";
    }

    # Media files
    location /media/ {
        alias /taiga/media/;
        expires max;
        add_header Cache-Control "public";
    }

    # Events
    location /events {
        proxy_pass http://taiga-events:8888/events;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Protected attachments
    location /protected/ {
        internal;
        alias /taiga/protected/;
        add_header Content-disposition "attachment";
    }

    # Taiga-protected service
    location /_protected/ {
        proxy_pass http://taiga-protected:8003/;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
    }

    # Health check endpoint
    location /api/v1/ready {
        access_log off;
        add_header 'Content-Type' 'application/json';
        return 200 '{"status":"ok"}';
    }
}
